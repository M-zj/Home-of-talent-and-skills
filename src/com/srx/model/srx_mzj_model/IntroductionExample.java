package com.srx.model.srx_mzj_model;

import java.util.ArrayList;
import java.util.List;

public class IntroductionExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table introduction
     *
     * @mbg.generated Thu Dec 05 08:36:32 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table introduction
     *
     * @mbg.generated Thu Dec 05 08:36:32 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table introduction
     *
     * @mbg.generated Thu Dec 05 08:36:32 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table introduction
     *
     * @mbg.generated Thu Dec 05 08:36:32 CST 2019
     */
    public IntroductionExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table introduction
     *
     * @mbg.generated Thu Dec 05 08:36:32 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table introduction
     *
     * @mbg.generated Thu Dec 05 08:36:32 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table introduction
     *
     * @mbg.generated Thu Dec 05 08:36:32 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table introduction
     *
     * @mbg.generated Thu Dec 05 08:36:32 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table introduction
     *
     * @mbg.generated Thu Dec 05 08:36:32 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table introduction
     *
     * @mbg.generated Thu Dec 05 08:36:32 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table introduction
     *
     * @mbg.generated Thu Dec 05 08:36:32 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table introduction
     *
     * @mbg.generated Thu Dec 05 08:36:32 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table introduction
     *
     * @mbg.generated Thu Dec 05 08:36:32 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table introduction
     *
     * @mbg.generated Thu Dec 05 08:36:32 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table introduction
     *
     * @mbg.generated Thu Dec 05 08:36:32 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIidIsNull() {
            addCriterion("iid is null");
            return (Criteria) this;
        }

        public Criteria andIidIsNotNull() {
            addCriterion("iid is not null");
            return (Criteria) this;
        }

        public Criteria andIidEqualTo(Integer value) {
            addCriterion("iid =", value, "iid");
            return (Criteria) this;
        }

        public Criteria andIidNotEqualTo(Integer value) {
            addCriterion("iid <>", value, "iid");
            return (Criteria) this;
        }

        public Criteria andIidGreaterThan(Integer value) {
            addCriterion("iid >", value, "iid");
            return (Criteria) this;
        }

        public Criteria andIidGreaterThanOrEqualTo(Integer value) {
            addCriterion("iid >=", value, "iid");
            return (Criteria) this;
        }

        public Criteria andIidLessThan(Integer value) {
            addCriterion("iid <", value, "iid");
            return (Criteria) this;
        }

        public Criteria andIidLessThanOrEqualTo(Integer value) {
            addCriterion("iid <=", value, "iid");
            return (Criteria) this;
        }

        public Criteria andIidIn(List<Integer> values) {
            addCriterion("iid in", values, "iid");
            return (Criteria) this;
        }

        public Criteria andIidNotIn(List<Integer> values) {
            addCriterion("iid not in", values, "iid");
            return (Criteria) this;
        }

        public Criteria andIidBetween(Integer value1, Integer value2) {
            addCriterion("iid between", value1, value2, "iid");
            return (Criteria) this;
        }

        public Criteria andIidNotBetween(Integer value1, Integer value2) {
            addCriterion("iid not between", value1, value2, "iid");
            return (Criteria) this;
        }

        public Criteria andInameIsNull() {
            addCriterion("iname is null");
            return (Criteria) this;
        }

        public Criteria andInameIsNotNull() {
            addCriterion("iname is not null");
            return (Criteria) this;
        }

        public Criteria andInameEqualTo(String value) {
            addCriterion("iname =", value, "iname");
            return (Criteria) this;
        }

        public Criteria andInameNotEqualTo(String value) {
            addCriterion("iname <>", value, "iname");
            return (Criteria) this;
        }

        public Criteria andInameGreaterThan(String value) {
            addCriterion("iname >", value, "iname");
            return (Criteria) this;
        }

        public Criteria andInameGreaterThanOrEqualTo(String value) {
            addCriterion("iname >=", value, "iname");
            return (Criteria) this;
        }

        public Criteria andInameLessThan(String value) {
            addCriterion("iname <", value, "iname");
            return (Criteria) this;
        }

        public Criteria andInameLessThanOrEqualTo(String value) {
            addCriterion("iname <=", value, "iname");
            return (Criteria) this;
        }

        public Criteria andInameLike(String value) {
            addCriterion("iname like", value, "iname");
            return (Criteria) this;
        }

        public Criteria andInameNotLike(String value) {
            addCriterion("iname not like", value, "iname");
            return (Criteria) this;
        }

        public Criteria andInameIn(List<String> values) {
            addCriterion("iname in", values, "iname");
            return (Criteria) this;
        }

        public Criteria andInameNotIn(List<String> values) {
            addCriterion("iname not in", values, "iname");
            return (Criteria) this;
        }

        public Criteria andInameBetween(String value1, String value2) {
            addCriterion("iname between", value1, value2, "iname");
            return (Criteria) this;
        }

        public Criteria andInameNotBetween(String value1, String value2) {
            addCriterion("iname not between", value1, value2, "iname");
            return (Criteria) this;
        }

        public Criteria andIintroductionIsNull() {
            addCriterion("iintroduction is null");
            return (Criteria) this;
        }

        public Criteria andIintroductionIsNotNull() {
            addCriterion("iintroduction is not null");
            return (Criteria) this;
        }

        public Criteria andIintroductionEqualTo(String value) {
            addCriterion("iintroduction =", value, "iintroduction");
            return (Criteria) this;
        }

        public Criteria andIintroductionNotEqualTo(String value) {
            addCriterion("iintroduction <>", value, "iintroduction");
            return (Criteria) this;
        }

        public Criteria andIintroductionGreaterThan(String value) {
            addCriterion("iintroduction >", value, "iintroduction");
            return (Criteria) this;
        }

        public Criteria andIintroductionGreaterThanOrEqualTo(String value) {
            addCriterion("iintroduction >=", value, "iintroduction");
            return (Criteria) this;
        }

        public Criteria andIintroductionLessThan(String value) {
            addCriterion("iintroduction <", value, "iintroduction");
            return (Criteria) this;
        }

        public Criteria andIintroductionLessThanOrEqualTo(String value) {
            addCriterion("iintroduction <=", value, "iintroduction");
            return (Criteria) this;
        }

        public Criteria andIintroductionLike(String value) {
            addCriterion("iintroduction like", value, "iintroduction");
            return (Criteria) this;
        }

        public Criteria andIintroductionNotLike(String value) {
            addCriterion("iintroduction not like", value, "iintroduction");
            return (Criteria) this;
        }

        public Criteria andIintroductionIn(List<String> values) {
            addCriterion("iintroduction in", values, "iintroduction");
            return (Criteria) this;
        }

        public Criteria andIintroductionNotIn(List<String> values) {
            addCriterion("iintroduction not in", values, "iintroduction");
            return (Criteria) this;
        }

        public Criteria andIintroductionBetween(String value1, String value2) {
            addCriterion("iintroduction between", value1, value2, "iintroduction");
            return (Criteria) this;
        }

        public Criteria andIintroductionNotBetween(String value1, String value2) {
            addCriterion("iintroduction not between", value1, value2, "iintroduction");
            return (Criteria) this;
        }

        public Criteria andIclickIsNull() {
            addCriterion("iclick is null");
            return (Criteria) this;
        }

        public Criteria andIclickIsNotNull() {
            addCriterion("iclick is not null");
            return (Criteria) this;
        }

        public Criteria andIclickEqualTo(Integer value) {
            addCriterion("iclick =", value, "iclick");
            return (Criteria) this;
        }

        public Criteria andIclickNotEqualTo(Integer value) {
            addCriterion("iclick <>", value, "iclick");
            return (Criteria) this;
        }

        public Criteria andIclickGreaterThan(Integer value) {
            addCriterion("iclick >", value, "iclick");
            return (Criteria) this;
        }

        public Criteria andIclickGreaterThanOrEqualTo(Integer value) {
            addCriterion("iclick >=", value, "iclick");
            return (Criteria) this;
        }

        public Criteria andIclickLessThan(Integer value) {
            addCriterion("iclick <", value, "iclick");
            return (Criteria) this;
        }

        public Criteria andIclickLessThanOrEqualTo(Integer value) {
            addCriterion("iclick <=", value, "iclick");
            return (Criteria) this;
        }

        public Criteria andIclickIn(List<Integer> values) {
            addCriterion("iclick in", values, "iclick");
            return (Criteria) this;
        }

        public Criteria andIclickNotIn(List<Integer> values) {
            addCriterion("iclick not in", values, "iclick");
            return (Criteria) this;
        }

        public Criteria andIclickBetween(Integer value1, Integer value2) {
            addCriterion("iclick between", value1, value2, "iclick");
            return (Criteria) this;
        }

        public Criteria andIclickNotBetween(Integer value1, Integer value2) {
            addCriterion("iclick not between", value1, value2, "iclick");
            return (Criteria) this;
        }

        public Criteria andIimgIsNull() {
            addCriterion("iimg is null");
            return (Criteria) this;
        }

        public Criteria andIimgIsNotNull() {
            addCriterion("iimg is not null");
            return (Criteria) this;
        }

        public Criteria andIimgEqualTo(String value) {
            addCriterion("iimg =", value, "iimg");
            return (Criteria) this;
        }

        public Criteria andIimgNotEqualTo(String value) {
            addCriterion("iimg <>", value, "iimg");
            return (Criteria) this;
        }

        public Criteria andIimgGreaterThan(String value) {
            addCriterion("iimg >", value, "iimg");
            return (Criteria) this;
        }

        public Criteria andIimgGreaterThanOrEqualTo(String value) {
            addCriterion("iimg >=", value, "iimg");
            return (Criteria) this;
        }

        public Criteria andIimgLessThan(String value) {
            addCriterion("iimg <", value, "iimg");
            return (Criteria) this;
        }

        public Criteria andIimgLessThanOrEqualTo(String value) {
            addCriterion("iimg <=", value, "iimg");
            return (Criteria) this;
        }

        public Criteria andIimgLike(String value) {
            addCriterion("iimg like", value, "iimg");
            return (Criteria) this;
        }

        public Criteria andIimgNotLike(String value) {
            addCriterion("iimg not like", value, "iimg");
            return (Criteria) this;
        }

        public Criteria andIimgIn(List<String> values) {
            addCriterion("iimg in", values, "iimg");
            return (Criteria) this;
        }

        public Criteria andIimgNotIn(List<String> values) {
            addCriterion("iimg not in", values, "iimg");
            return (Criteria) this;
        }

        public Criteria andIimgBetween(String value1, String value2) {
            addCriterion("iimg between", value1, value2, "iimg");
            return (Criteria) this;
        }

        public Criteria andIimgNotBetween(String value1, String value2) {
            addCriterion("iimg not between", value1, value2, "iimg");
            return (Criteria) this;
        }

        public Criteria andTidIsNull() {
            addCriterion("tid is null");
            return (Criteria) this;
        }

        public Criteria andTidIsNotNull() {
            addCriterion("tid is not null");
            return (Criteria) this;
        }

        public Criteria andTidEqualTo(Integer value) {
            addCriterion("tid =", value, "tid");
            return (Criteria) this;
        }

        public Criteria andTidNotEqualTo(Integer value) {
            addCriterion("tid <>", value, "tid");
            return (Criteria) this;
        }

        public Criteria andTidGreaterThan(Integer value) {
            addCriterion("tid >", value, "tid");
            return (Criteria) this;
        }

        public Criteria andTidGreaterThanOrEqualTo(Integer value) {
            addCriterion("tid >=", value, "tid");
            return (Criteria) this;
        }

        public Criteria andTidLessThan(Integer value) {
            addCriterion("tid <", value, "tid");
            return (Criteria) this;
        }

        public Criteria andTidLessThanOrEqualTo(Integer value) {
            addCriterion("tid <=", value, "tid");
            return (Criteria) this;
        }

        public Criteria andTidIn(List<Integer> values) {
            addCriterion("tid in", values, "tid");
            return (Criteria) this;
        }

        public Criteria andTidNotIn(List<Integer> values) {
            addCriterion("tid not in", values, "tid");
            return (Criteria) this;
        }

        public Criteria andTidBetween(Integer value1, Integer value2) {
            addCriterion("tid between", value1, value2, "tid");
            return (Criteria) this;
        }

        public Criteria andTidNotBetween(Integer value1, Integer value2) {
            addCriterion("tid not between", value1, value2, "tid");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table introduction
     *
     * @mbg.generated do_not_delete_during_merge Thu Dec 05 08:36:32 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table introduction
     *
     * @mbg.generated Thu Dec 05 08:36:32 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}